I"<link rel="stylesheet" href="/css/pygments.css" />

<p>作者: Jakob Jenkov</p>

<p>　　本小节会简要概括Java IO中字节数组与过滤器的输入输出流，主要涉及以下4个类型的流：ByteArrayInputStream，ByteArrayOutputStream，FilterInputStream，FilterOutputStream。请注意，为了清晰，这里忽略了必要的异常处理。想了解更多异常处理的信息，请参考Java IO异常处理。</p>

<p>#ByteArrayInputStream</p>

<p>　　<a href="http://tutorials.jenkov.com/java-io/bytearrayinputstream.html">原文链接</a></p>

<p>　　ByteArrayInputStream允许你从字节数组中读取字节流数据，代码如下：</p>

<figure class="highlight"><pre><code class="language-java" data-lang="java"> 

<span class="kt">byte</span><span class="o">[]</span> <span class="n">bytes</span> <span class="o">=</span> <span class="o">...</span> <span class="c1">//get byte array from somewhere.</span>

<span class="nc">InputStream</span> <span class="n">input</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ByteArrayInputStream</span><span class="o">(</span><span class="n">bytes</span><span class="o">);</span>

<span class="kt">int</span> <span class="n">data</span> <span class="o">=</span> <span class="n">input</span><span class="o">.</span><span class="na">read</span><span class="o">();</span>

<span class="k">while</span><span class="o">(</span><span class="n">data</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>

    <span class="c1">//do something with data</span>

    <span class="n">data</span> <span class="o">=</span> <span class="n">input</span><span class="o">.</span><span class="na">read</span><span class="o">();</span>

<span class="o">}</span>

<span class="n">input</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>

    </code></pre></figure>

<p>　　
　　如果数据存储在数组中，ByteArrayInputStream可以很方便地读取数据。如果你有一个InputStream变量，又想从数组中读取数据呢？很简单，只需要把字节数组传递给ByteArrayInputStream的构造函数，在把这个ByteArrayInputStream赋值给InputStream变量就可以了(译者注：InputStream是所有字节输入流流的基类，Reader是所有字符输入流的基类，OutputStream与Writer同理)。</p>

<!-- more -->

<p>#ByteArrayOutputStream</p>

<p>　　<a href="http://tutorials.jenkov.com/java-io/bytearrayoutputstream.html">原文链接</a></p>

<p>　　ByteArrayOutputStream允许你以数组的形式获取写入到该输出流中的数据，代码如下：</p>

<figure class="highlight"><pre><code class="language-java" data-lang="java"> 

<span class="nc">ByteArrayOutputStream</span> <span class="n">output</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ByteArrayOutputStream</span><span class="o">();</span>

<span class="c1">//write data to output stream</span>

<span class="kt">byte</span><span class="o">[]</span> <span class="n">bytes</span> <span class="o">=</span> <span class="n">output</span><span class="o">.</span><span class="na">toByteArray</span><span class="o">();</span>

    </code></pre></figure>

<p>#FilterInputStream</p>

<p>　　<a href="http://tutorials.jenkov.com/java-io/filterinputstream.html">原文链接</a></p>

<p>　　FilterInputStream是实现自定义过滤输入流的基类，基本上它仅仅只是覆盖了InputStream中的所有方法。</p>

<p>　　就我自己而言，我没发现这个类明显的用途。除了构造函数取一个InputStream变量作为参数之外，我没看到FilterInputStream任何对InputStream新增或者修改的地方。如果你选择继承FilterInputStream实现自定义的类，同样也可以直接继承自InputStream从而避免额外的类层级结构。</p>

<p>#FilterOutputStream</p>

<p>　　<a href="http://tutorials.jenkov.com/java-io/filteroutputstream.html">原文链接</a></p>

<p>　　内容同FilterInputStream，不再赘述。</p>
:ET