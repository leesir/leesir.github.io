I"{<link rel="stylesheet" href="/css/pygments.css" />

<p><a href="http://tutorials.jenkov.com/java-io/fileinputstream.html">原文链接</a> 作者: Jakob Jenkov</p>

<p>　　FileInputStream可以以字节流的形式读取文件内容。FileInputStream是InputStream的子类，这意味着你可以把FileInputStream当做InputStream使用(FileInputStream与InputStream的行为类似)。</p>

<p>　　这是一个FileInputStream的例子：</p>

<figure class="highlight"><pre><code class="language-java" data-lang="java"> 

<span class="nc">InputStream</span> <span class="n">input</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">FileInputStream</span><span class="o">(</span><span class="s">"c:\\data\\input-text.txt"</span><span class="o">);</span>

<span class="kt">int</span> <span class="n">data</span> <span class="o">=</span> <span class="n">input</span><span class="o">.</span><span class="na">read</span><span class="o">();</span><span class="k">while</span><span class="o">(</span><span class="n">data</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>

    <span class="c1">//do something with data...</span>

    <span class="n">doSomethingWithData</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>

    <span class="n">data</span> <span class="o">=</span> <span class="n">input</span><span class="o">.</span><span class="na">read</span><span class="o">();</span>

<span class="o">}</span>

<span class="n">input</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>

    </code></pre></figure>

<!-- more -->

<p>　　请注意，为了清晰，这里忽略了必要的异常处理。想了解更多异常处理的信息，请参考<a href="http://leesir.github.io/2015/10/java-io-exception/">Java IO异常处理</a>。</p>

<p>　　FileInputStream的read()方法返回读取到的包含一个字节内容的int变量(译者注：0~255)。如果read()方法返回-1，意味着程序已经读到了流的末尾，此时流内已经没有多余的数据可供读取了，你可以关闭流。-1是一个int类型，不是byte类型，这是不一样的。</p>

<p>　　FileInputStream也有其他的构造函数，允许你通过不同的方式读取文件。请参考<a href="http://docs.oracle.com/javase/7/docs/api/">官方文档</a>查阅更多信息。</p>

<p>　　其中一个FileInputStream构造函数取一个File对象替代String对象作为参数。这里是一个使用该构造函数的例子：</p>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><span class="nc">File</span> <span class="n">file</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="s">"c:\\data\\input-text.txt"</span><span class="o">);</span>

<span class="nc">InputStream</span> <span class="n">input</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">FileInputStream</span><span class="o">(</span><span class="n">file</span><span class="o">);</span>

    </code></pre></figure>

<p>　　至于你该采用参数是String对象还是File对象的构造函数，取决于你当前是否已经拥有一个File对象，也取决于你是否要在打开FileOutputStream之前通过File对象执行某些检查(比如检查文件是否存在)。</p>
:ET